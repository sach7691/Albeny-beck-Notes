write a query to drop an existing table?
DROP table <table name>
DROP table student_details;

-----------------------------------------------
What is Constraints in SQL?

Rules that govern data input/ to safeguard the table

Types of constraints: 

1. PRIMARY KEY : consataint which is used to identify records uniquely and field cannot be null
2. FOREIGN KEY : refers to primary key of another table, can have null values (couse details will there but there are no students enrol yet, in that case student_id will be null)
3. CHECK
4. NOT NULL
5. DEFAULT
6. UNIQUE
----------------------------------------
Write a query to create a table with constraints?

// table-level constraint
CREATE table student (
				student_id int,
				student_name varchar(20) NOT NULL,
				student_email varchar (20),
			      PRIMARY KEY(student_id)
			    );
				
// column-level constraint 				
CREATE table student (
				student_id int PRIMARY KEY,
				student_name varchar(20) NOT NULL,
				student_email varchar (20), 
			    );
write query to insert multiple rows into a selected table?

INSERT into student VALUES(1,'sachini','s@gmail.com'),
				  (2,'Anu','a@gmail.com'),
			        (3,'sasika','sa@gmail.com');

Note: PRIMARY KEY ensures that unique and NOT NULL values are maintained

Write a query to demonstrate FOREIGN KEY constraint

//association is one to many ( 1 student can have multuple courses)
CREATE table course(
			  course_id int(20),
                    course_title varchar(20) NOT NULL,
			  course_fee double(10,2),
			  student_id int,
			  PRIMARY KEY(course_id),
			  FOREIGN KEY(student_id) REFERENCES student(student_id)
                    );	

//DOUBLE(size, d) :The total number of digits is specified in size. The number of digits after the decimal point is specified in the d parameter

//FORIGN KEY is a column in a table which refers to PRIMARY KEY of another table

Write a query to populate course table with some data

INSERT into course(course_id,course_title,course_fee) 
		VALUES(1,'sql',100);

assign myself to the available course

//ALTER use to make changes for table but UPDATE uses to update a field in a table
UPDATE course SET student_id = 1 WHERE course_id = 1;

INSERT values to course

INSERT into course(course_id,course_title,course_fee,student_id) 
		VALUES(2,'sql',500.50,2);

What is Referential Integrity in sql?

Process of ensuring that the parent table (student) and child table (course) have consistent data 

In this process a foreign key will have a value that matches value of a primary key value of another table

ex: 
DELETE FROM course WHERE student_id=1; // this is not allowed because you cannot delete a record which connect with the parent table (student) - referential intergrity

----------------------------------------------------------
ON  UPDATE CASCADE and ON DELETE CASCADE flags
// with cascading we can delete parent records(student_id), without dropping the child table. referntial integrity is eliminated by cascading.
 
create a new table called "Payment" which connects student table.

CREATE table payment(
			   payment_id int,
			   payment_desc varchar(20),
			   payment_amount double(10,2),
			   student_id int,
                     PRIMARY KEY (payment_id),
		         FOREIGN KEY (student_id) REFERENCES student(student_id)
		         ON DELETE CASCADE
	               ON UPDATE CASCADE
			   );


write a query to populate payment table with some data

INSERT into payment(payment_id,payment_desc,payment_amount,student_id)
VALUES(1,'course fee',100,1);

INSERT into 
payment(payment_id,payment_desc,payment_amount,student_id)
VALUES(2,'admin fee',10,1);

INSERT into 
payment(payment_id,payment_desc,payment_amount,student_id)
VALUES(3,'admin fee',200,2);

Attempting to delete a student record which is refered by  payment table

DELETE FROM student WHERE student_id=1; // before execute this we have to drop the course table because student_id is a FK for course table ( we have not applied CASCADE for course table)

---------------------------------------------------------------
write a query to update column name of a table?

ALTER table payment CHANGE <old name> <new col> <datatype (20)>;

ALTER table payment CHANGE payment_desc payment_description varchar(20);

----------------------------------------------------------------

write a query to add new constraint on "payment_amount"which checks minimum amount should be 10

ALTER table payment ADD CONSTRAINT chk_pay CHECK (payment_amount >=10);

write a query to drop a constaint (check) from payment table?

ALTER TABLE payment DROP CONSTRAINT chk_pay;

---------------------------------------------------------------
write a query to drop PRIMARY KEY

ALTER table payment DROP CONSTRAINT PRIMARY KEY;

write a query to add PRIMARY KEY CONSTRAINT to an existing column

ALTER table payment ADD CONSTRAINT PK_Payment PRIMARY KEY (payment_id);

Add a constraint to foreign key 
ALTER table property ADD CONSTRAINT fk_employee FOREIGN KEY (employee_id) REFERENCES employee(employee_id);

---------------------------------------------------------------